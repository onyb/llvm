sudo: false

language: cpp

matrix:
  include:
    - os: linux
    - os: osx

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - build-essential
      - binutils-gold

before_script:
- git config --global user.email "ani07nov@gmail.com"
- git config --global user.name "Anirudha Bose"

- |
  export TMPDIR=/tmp
  mkdir -pv $TMPDIR/cmake

  if [ $TRAVIS_OS_NAME == 'linux' ]; then
    CMAKE_URL="https://cmake.org/files/v3.6/cmake-3.6.0-Linux-x86_64.tar.gz"
    travis_retry wget --no-check-certificate -O - $CMAKE_URL | tar --strip-components=1 -xz -C $TMPDIR/cmake

    mkdir -pv $TMPDIR/clang
    CLANG_URL="http://llvm.org/releases/3.8.0/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz"
    travis_retry wget --no-check-certificate -O - $CLANG_URL | tar --strip-components=1 -xJ -C $TMPDIR/clang

    export CMAKE=$TMPDIR/cmake/bin/cmake
    export CC=$TMPDIR/clang/bin/clang
    export CXX=$TMPDIR/clang/bin/clang++

  elif [ $TRAVIS_OS_NAME == 'osx' ]; then
    CMAKE_URL="http://cmake.org/files/v3.6/cmake-3.6.0-Darwin-x86_64.tar.gz"
    travis_retry wget --no-check-certificate -O - $CMAKE_URL | tar --strip-components=1 -xz -C $TMPDIR/cmake

    mkdir -pv $TMPDIR/clang
    CLANG_URL="http://llvm.org/releases/3.8.0/clang+llvm-3.8.0-x86_64-apple-darwin.tar.xz"
    travis_retry wget --no-check-certificate -O - $CLANG_URL | tar --strip-components=1 -xJ -C $TMPDIR/clang

    export CMAKE=$TMPDIR/cmake/CMake.app/Contents/bin/cmake
    export CC=$TMPDIR/clang/bin/clang
    export CXX=$TMPDIR/clang/bin/clang++
  fi

- $CMAKE --version
- $CC --version
- $CXX --version

script:
- |
  mkdir -pv build
  cd build
  $CMAKE -DLLVM_ENABLE_LIBCXX=ON -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=host -DCMAKE_INSTALL_PREFIX=$TMPDIR/cpt/llvm ../
  make -j$(nproc)
  make test
  make install -j$(python -c "import multiprocessing; print(multiprocessing.cpu_count())")

  ls $TMPDIR/cpt/llvm


notifications:
  recipients:
  - ani07nov@gmail.com
  # - vvasilev@cern.ch
  email:
    on_success: change
    on_failure: always
  template:
  - "%{repository}/%{branch} (%{commit} - %{author}): %{message}"

before_deploy:
- export RELEASE_TARBALL=$(ls $HOME/ci/build/cling*.tar.bz2)
- echo "Deploying $RELEASE_TARBALL to GitHub releases"

deploy:
  provider: releases
  skip_cleanup: true
  # api_key: "afcebbd67ee9259667a6fdb414331c29e70000f4"
  file: '${RELEASE_TARBALL}'
  on:
    tags: true
    repo: onyb/llvm
